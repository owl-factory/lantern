scalar JSONObject
scalar DateTime

enum Visibility {
  public
  friends
  limited
  private
}

enum Group {
  user
  admin
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  username: String!
  email: String!
  isOrganization: Boolean!
  displayName: String
  iconUrl: String
  groups: [Group]
}

type Session {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
  activeExpires: DateTime!
  idleExpires: DateTime!
  isApiKey: Boolean!
}

type Content {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  isDynamic: Boolean!
  name: String!
  visibility: Visibility!
  data: JSONObject
  index1: String
  index2: String
  index3: String
  index4: String
  index5: String
  index6: String
  index7: String
  index8: String
  index9: String
}

type Query {
  session: Session!
  content(id: ID!): Content!
  contentSet(contentTypeId: ID): [Content]!
}

type Mutation {
  signup(
    email: String!
    username: String!
    password: String!
    displayName: String
    logIn: Boolean = false
    setCookie: Boolean = false
  ): String
  login(username: String!, password: String!, setCookie: Boolean = false): String!
  logout(deleteCookie: Boolean = false): String!
  deleteUser(id: ID!, username: String!, deleteCookie: Boolean = false): String!
  createContent(
    name: String!
    data: JSONObject
    visibility: Visibility
    isDynamic: Boolean = true
  ): Content
  updateContent(
    id: ID!
    name: String
    data: JSONObject
    visibility: Visibility
    isDynamic: Boolean
  ): Content
  deleteContent(id: ID!): ID!
}
